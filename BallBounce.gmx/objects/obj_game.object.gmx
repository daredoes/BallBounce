<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>amountOfBalls = 8;
switch(obj_variables.difficulty)
{
    case "easy":
    create_balls(8);
    break;
    case "medium":
    create_balls(10);
    break;
    case "hard":
    create_balls(12);
    break;
}

allGreen = false;
touchable = false;
gameTime = false;
stepScore = 14;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0; i &lt; array_length_1d(ballsInPlay);i++)
{
    ballsInPlay[i].stop = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
touchable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blueBalls = 0)
{
    touchable = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Score Bar
/*
draw_set_color(c_black);
draw_rectangle(0,0,room_width-1,120,0);
draw_set_color(c_white);
draw_rectangle(0,0,room_width-1,120,1);
*/
//Text Stuff
draw_set_color(c_white);
draw_set_font(fnt_default);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(fnt_topbar);
draw_text(10,60,"Score: " + string(score));



if(alarm[1] &gt; -1)
{
    draw_set_font(fnt_countdown);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    if(round(alarm[1]/30) != 0)
    {
        draw_text(room_width/2,60,string(round(alarm[1]/30)));
    }
    else
    {
        draw_text(room_width/2,60,"GO!");
    }
    draw_set_color(c_black);
    draw_set_font(fnt_default);
}
if(touchable)
{
    draw_set_color(c_white);
    draw_set_font(fnt_topbar);
    if(gameTime)
    {
        if( totalBlueBalls != 0)
        {
            score += stepScore
        }
        draw_text(room_width/2,60,"Balls Remaining: " + string(totalBlueBalls));
    }
}
if(obj_ball.alarm[0] &gt; -1)
{
    draw_set_font(fnt_countdown);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    if(round(obj_ball.alarm[0]/30) != 0)
    {
        draw_text(room_width/2,room_height/2-128,"Balls Stopping In:");
        draw_text(room_width/2,room_height/2,string(round(obj_ball.alarm[0]/30)));
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
